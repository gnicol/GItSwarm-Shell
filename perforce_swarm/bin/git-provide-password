#!/usr/bin/env ruby

require_relative '../init'
require_relative '../config'
require_relative '../git_fusion'

def parse_host(args)
  fail "We weren't asked to provide a password." if !args || args.empty? || !args[0].start_with?('Password for ')
  args[0].gsub(/^Password for '(.+?)'\s*:\s*$/, '\1')
end

begin
  host     = parse_host(ARGV)
  password = ''
  # find the matching config entry based on matching url, if we can
  PerforceSwarm::GitlabConfig.new.git_fusion_entries.each do |_id, entry|
    next unless entry['url'] == host

    # return the explicitly configured password if present, fallback to the password specified in the URL
    # if neither is present, this results in empty string
    password = entry['password'] || PerforceSwarm::GitFusion::URL.new(entry['url']).password
  end
  puts password
rescue StandardError => e
  $logger.error "Failed to provide a password: #{e.message}"
  puts ''
end
