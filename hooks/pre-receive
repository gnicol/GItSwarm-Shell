#!/usr/bin/env ruby

# This file was placed here by GitLab. It makes sure that your pushed commits
# will be processed properly.

refs = ARGF.read
key_id  = ENV['GL_ID']
repo_path = Dir.pwd

require_relative '../lib/gitlab_custom_hook'
require_relative '../lib/gitlab_access'

if !GitlabAccess.new(repo_path, key_id, refs).exec || !GitlabCustomHook.new.pre_receive(refs, repo_path)
  exit 1
end

p "==[ Its on! ]============================================================";

# if we have a 'mirror' remote, push to it first and reject everything if its unhappy
Dir.chdir(repo_path) do
  # no configured mirror means nutin to do; exit happy!
  exit 1 unless system('git config --get remote.mirror.url')

  # we have a mirror; figure out the updated refs so we can trial push
  pushRefs = []
  refs.split("\n").each do |refline|
    src, tgt, ref = refline.strip.split
    pushRefs.push(tgt + ":" + ref)
  end

  # push the ref updates to the remote mirror and fail out if they are unhappy
  exit 1 unless system('git', 'push', 'mirror', *pushRefs);
end

require 'tmpdir'
Dir.mktmpdir do |temp|
  Dir.chdir(temp) do
    mirror = `git config --get remote.mirror.url`
    mirror.gsub!(/\/([^\/]*$)/, '/@wait@\1')
    system('git', 'clone', mirror)
  end
end

exit 1
